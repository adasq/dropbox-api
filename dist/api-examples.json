{
	"auth/token/from_oauth1": {
		"uri": "https://api.dropboxapi.com/2/auth/token/from_oauth1",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Creates an OAuth 2.0 access token from the supplied OAuth 1.0 access token.",
		"parameters": {
			"list": [
				{
					"name": "oauth1_token",
					"type": "String(min_length=1)",
					"desc": "The supplied OAuth 1.0 access token."
				},
				{
					"name": "oauth1_token_secret",
					"type": "String(min_length=1)",
					"desc": "The token secret associated with the supplied access token."
				}
			],
			"example": {
				"oauth1_token": "qievr8hamyg6ndck",
				"oauth1_token_secret": "qomoftv0472git7"
			}
		},
		"returnParameters": {
			"oauth2_token": "9mCrkS7BIdAAAAAAAAAAHHS0TsSnpYvKQVtKdBnN5IuzhYOGblSgTcHgBFKFMmFn"
		}
	},
	"auth/token/revoke": {
		"uri": "https://api.dropboxapi.com/2/auth/token/revoke",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Disables the access token used to authenticate the call.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": null
	},
	"files/alpha/get_metadata": {
		"uri": "https://api.dropboxapi.com/2/files/alpha/get_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the metadata for a file or folder. This is an alpha endpoint compatible with the properties API. Note: Metadata for the root folder is unsupported.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of a file or folder on Dropbox."
				},
				{
					"name": "include_media_info",
					"type": "Boolean",
					"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
				},
				{
					"name": "include_deleted",
					"type": "Boolean",
					"desc": "If true,   will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False."
				},
				{
					"name": "include_has_explicit_shared_members",
					"type": "Boolean",
					"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
				},
				{
					"name": "include_property_templates",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"))?",
					"desc": "If set to a valid list of template IDs, FileMetadata.property_groups is set for files with custom properties. This field is optional."
				}
			],
			"example": {
				"path": "/Homework/math",
				"include_media_info": false,
				"include_deleted": false,
				"include_has_explicit_shared_members": false
			}
		},
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/alpha/upload": {
		"uri": "https://content.dropboxapi.com/2/files/alpha/upload",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Create a new file with the contents provided in the request. Note that this endpoint is part of the properties API alpha and is slightly different from [upload](#filesupload-see-docs). Do not use this to upload a file larger than 150 MB. Instead, create an upload session with [upload_session/start](#filesupload_sessionstart-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)?",
					"desc": "List of custom properties to add to file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for a property template type."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for a property template type."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
				}
			],
			"example": {
				"path": "/Homework/math/Matrices.txt",
				"mode": "add",
				"autorename": true,
				"mute": false,
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/copy": {
		"uri": "https://api.dropboxapi.com/2/files/copy",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Copy a file or folder to a different location in the user's Dropbox. If the source path is a folder all its contents will be copied.",
		"parameters": {
			"list": [
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "allow_shared_folder",
					"type": "Boolean",
					"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if from_path contains shared folder. This field is always true for  . The default for this field is False."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"from_path": "/Homework/math",
				"to_path": "/Homework/algebra",
				"allow_shared_folder": false,
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/copy_batch": {
		"uri": "https://api.dropboxapi.com/2/files/copy_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Copy multiple files or folders to different locations at once in the user's Dropbox. If RelocationBatchArg.allow_shared_folder is false, this route is atomic. If on entry failes, the whole transaction will abort. If RelocationBatchArg.allow_shared_folder is true, not atomicity is guaranteed, but you will be able to copy the contents of shared folders to new locations. This route will return job ID immediately and do the async copy job in background. Please use [copy_batch/check](#filescopy_batchcheck-see-docs) to check the job status.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (RelocationPath)",
					"desc": "List of entries to be moved or copied. Each entry is  .",
					"parameters": [
						{
							"list": [
								{
									"name": "from_path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox to be copied or moved."
								},
								{
									"name": "to_path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox that is the destination."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "allow_shared_folder",
					"type": "Boolean",
					"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if RelocationPath.from_path contains shared folder.  This field is always true for  . The default for this field is False."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"entries": [
					{
						"from_path": "/Homework/math",
						"to_path": "/Homework/algebra"
					}
				],
				"allow_shared_folder": false,
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/copy_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/copy_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [copy_batch](#filescopy_batch-see-docs). If success, it returns list of results for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/copy_reference/get": {
		"uri": "https://api.dropboxapi.com/2/files/copy_reference/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get a copy reference to a file or folder. This reference string can be used to save that file or folder to another user's Dropbox by passing it to [copy_reference/save](#filescopy_referencesave-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the file or folder you want to get a copy reference to."
				}
			],
			"example": {
				"path": "/video.mp4"
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			},
			"copy_reference": "z1X6ATl6aWtzOGq0c3g5Ng",
			"expires": "2045-05-12T15:50:38Z"
		}
	},
	"files/copy_reference/save": {
		"uri": "https://api.dropboxapi.com/2/files/copy_reference/save",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Save a copy reference returned by [copy_reference/get](#filescopy_referenceget-see-docs) to the user's Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "copy_reference",
					"type": "String",
					"desc": "A copy reference returned by  ."
				},
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")",
					"desc": "Path in the user's Dropbox that is the destination."
				}
			],
			"example": {
				"copy_reference": "z1X6ATl6aWtzOGq0c3g5Ng",
				"path": "/video.mp4"
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			}
		}
	},
	"files/copy_v2": {
		"uri": "https://api.dropboxapi.com/2/files/copy_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Copy a file or folder to a different location in the user's Dropbox. If the source path is a folder all its contents will be copied.",
		"parameters": {
			"list": [
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "allow_shared_folder",
					"type": "Boolean",
					"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if from_path contains shared folder. This field is always true for  . The default for this field is False."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"from_path": "/Homework/math",
				"to_path": "/Homework/algebra",
				"allow_shared_folder": false,
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			}
		}
	},
	"files/create_folder": {
		"uri": "https://api.dropboxapi.com/2/files/create_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create a folder at a given path.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to create."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math",
				"autorename": false
			}
		},
		"returnParameters": {
			"name": "math",
			"id": "id:a4ayc_80_OEAAAAAAAAAXz",
			"path_lower": "/homework/math",
			"path_display": "/Homework/math",
			"sharing_info": {
				"read_only": false,
				"parent_shared_folder_id": "84528192421",
				"traverse_only": false,
				"no_access": false
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			]
		}
	},
	"files/create_folder_v2": {
		"uri": "https://api.dropboxapi.com/2/files/create_folder_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create a folder at a given path.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to create."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math",
				"autorename": false
			}
		},
		"returnParameters": {
			"metadata": {
				"name": "math",
				"id": "id:a4ayc_80_OEAAAAAAAAAXz",
				"path_lower": "/homework/math",
				"path_display": "/Homework/math",
				"sharing_info": {
					"read_only": false,
					"parent_shared_folder_id": "84528192421",
					"traverse_only": false,
					"no_access": false
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		}
	},
	"files/delete": {
		"uri": "https://api.dropboxapi.com/2/files/delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Delete the file or folder at a given path. If the path is a folder, all its contents will be deleted too. A successful response indicates that the file or folder was deleted. The returned metadata will be the corresponding FileMetadata or FolderMetadata for the item at time of deletion, and not a DeletedMetadata object.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to delete."
				}
			],
			"example": {
				"path": "/Homework/math/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/delete_batch": {
		"uri": "https://api.dropboxapi.com/2/files/delete_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Delete multiple files/folders at once. This route is asynchronous, which returns a job ID immediately and runs the delete batch asynchronously. Use [delete_batch/check](#filesdelete_batchcheck-see-docs) to check the job status.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (DeleteArg)",
					"desc": "",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox to delete."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to delete."
				}
			],
			"example": {
				"entries": [
					{
						"path": "/Homework/math/Prime_Numbers.txt"
					}
				]
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/delete_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/delete_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [delete_batch](#filesdelete_batch-see-docs). If success, it returns list of result for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/delete_v2": {
		"uri": "https://api.dropboxapi.com/2/files/delete_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Delete the file or folder at a given path. If the path is a folder, all its contents will be deleted too. A successful response indicates that the file or folder was deleted. The returned metadata will be the corresponding FileMetadata or FolderMetadata for the item at time of deletion, and not a DeletedMetadata object.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to delete."
				}
			],
			"example": {
				"path": "/Homework/math/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			}
		}
	},
	"files/download": {
		"uri": "https://content.dropboxapi.com/2/files/download",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Download a file from a user's Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of the file to download."
				},
				{
					"name": "rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
					"desc": "Deprecated. Please specify revision in path instead. This field is optional."
				}
			],
			"example": {
				"path": "/Homework/math/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/get_metadata": {
		"uri": "https://api.dropboxapi.com/2/files/get_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the metadata for a file or folder. Note: Metadata for the root folder is unsupported.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of a file or folder on Dropbox."
				},
				{
					"name": "include_media_info",
					"type": "Boolean",
					"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
				},
				{
					"name": "include_deleted",
					"type": "Boolean",
					"desc": "If true,   will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False."
				},
				{
					"name": "include_has_explicit_shared_members",
					"type": "Boolean",
					"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math",
				"include_media_info": false,
				"include_deleted": false,
				"include_has_explicit_shared_members": false
			}
		},
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/get_preview": {
		"uri": "https://content.dropboxapi.com/2/files/get_preview",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Get a preview for a file. Currently, PDF previews are generated for files with the following extensions: .ai, .doc, .docm, .docx, .eps, .odp, .odt, .pps, .ppsm, .ppsx, .ppt, .pptm, .pptx, .rtf. HTML previews are generated for files with the following extensions: .csv, .ods, .xls, .xlsm, .xlsx. Other formats will return an unsupported extension error.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path of the file to preview."
				},
				{
					"name": "rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
					"desc": "Deprecated. Please specify revision in path instead. This field is optional."
				}
			],
			"example": {
				"path": "/word.docx"
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/get_temporary_link": {
		"uri": "https://api.dropboxapi.com/2/files/get_temporary_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get a temporary link to stream content of a file. This link will expire in four hours and afterwards you will get 410 Gone. Content-Type of the link is determined automatically by the file's mime type.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the file you want a temporary link to."
				}
			],
			"example": {
				"path": "/video.mp4"
			}
		},
		"returnParameters": {
			"metadata": {
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			},
			"link": "https://dl.dropboxusercontent.com/apitl/1/YXNkZmFzZGcyMzQyMzI0NjU2NDU2NDU2"
		}
	},
	"files/get_thumbnail": {
		"uri": "https://content.dropboxapi.com/2/files/get_thumbnail",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Get a thumbnail for an image. This method currently supports files with the following file extensions: jpg, jpeg, png, tiff, tif, gif and bmp. Photos that are larger than 20MB in size won't be converted to a thumbnail.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the image file you want to thumbnail."
				},
				{
					"name": "format",
					"type": "ThumbnailFormat",
					"desc": "The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts. The default for this union is jpeg.",
					"parameters": [
						{
							"list": [
								{
									"name": "jpeg",
									"type": "Void",
									"desc": ""
								},
								{
									"name": "png",
									"type": "Void",
									"desc": ""
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "jpeg",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "png",
					"type": "Void",
					"desc": ""
				},
				{
					"name": "size",
					"type": "ThumbnailSize",
					"desc": "The size for the thumbnail image. The default for this union is w64h64.",
					"parameters": [
						{
							"list": [
								{
									"name": "w32h32",
									"type": "Void",
									"desc": "32 by 32 px."
								},
								{
									"name": "w64h64",
									"type": "Void",
									"desc": "64 by 64 px."
								},
								{
									"name": "w128h128",
									"type": "Void",
									"desc": "128 by 128 px."
								},
								{
									"name": "w640h480",
									"type": "Void",
									"desc": "640 by 480 px."
								},
								{
									"name": "w1024h768",
									"type": "Void",
									"desc": "1024 by 768."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "w32h32",
					"type": "Void",
					"desc": "32 by 32 px."
				},
				{
					"name": "w64h64",
					"type": "Void",
					"desc": "64 by 64 px."
				},
				{
					"name": "w128h128",
					"type": "Void",
					"desc": "128 by 128 px."
				},
				{
					"name": "w640h480",
					"type": "Void",
					"desc": "640 by 480 px."
				},
				{
					"name": "w1024h768",
					"type": "Void",
					"desc": "1024 by 768."
				}
			],
			"example": {
				"path": "/image.jpg",
				"format": "jpeg",
				"size": "w64h64"
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/list_folder": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Starts returning the contents of a folder. If the result's ListFolderResult.has_more field is true, call [list_folder/continue](#fileslist_foldercontinue-see-docs) with the returned ListFolderResult.cursor to retrieve more entries. If you're using ListFolderArg.recursive set to true to keep a local cache of the contents of a Dropbox account, iterate through each entry in order and process them as follows to keep your local state in sync: For each FileMetadata, store the new entry at the given path in your local state. If the required parent folders don't exist yet, create them. If there's already something else at the given path, replace it and remove all its children. For each FolderMetadata, store the new entry at the given path in your local state. If the required parent folders don't exist yet, create them. If there's already something else at the given path, replace it but leave the children as they are. Check the new entry's FolderSharingInfo.read_only and set all its children's read-only statuses to match. For each DeletedMetadata, if your local state has something at the given path, remove it and all its children. If there's nothing at the given path, ignore this entry. Note: auth.RateLimitError may be returned if multiple [list_folder](#fileslist_folder-see-docs) or [list_folder/continue](#fileslist_foldercontinue-see-docs) calls with same parameters are made simultaneously by same API app for same user. If your app implements retry logic, please hold off the retry until the previous request finishes.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)?|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the folder you want to see the contents of."
				},
				{
					"name": "recursive",
					"type": "Boolean",
					"desc": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False."
				},
				{
					"name": "include_media_info",
					"type": "Boolean",
					"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
				},
				{
					"name": "include_deleted",
					"type": "Boolean",
					"desc": "If true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False."
				},
				{
					"name": "include_has_explicit_shared_members",
					"type": "Boolean",
					"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math",
				"recursive": false,
				"include_media_info": false,
				"include_deleted": false,
				"include_has_explicit_shared_members": false
			}
		},
		"returnParameters": {
			"entries": [
				{
					".tag": "file",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				},
				{
					".tag": "folder",
					"name": "math",
					"id": "id:a4ayc_80_OEAAAAAAAAAXz",
					"path_lower": "/homework/math",
					"path_display": "/Homework/math",
					"sharing_info": {
						"read_only": false,
						"parent_shared_folder_id": "84528192421",
						"traverse_only": false,
						"no_access": false
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					]
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
			"has_more": false
		}
	},
	"files/list_folder/continue": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_folder](#fileslist_folder-see-docs), use this to paginate through all files and retrieve updates to the folder, following the same rules as documented for [list_folder](#fileslist_folder-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String(min_length=1)",
					"desc": "The cursor returned by your last call to   or  ."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"entries": [
				{
					".tag": "file",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				},
				{
					".tag": "folder",
					"name": "math",
					"id": "id:a4ayc_80_OEAAAAAAAAAXz",
					"path_lower": "/homework/math",
					"path_display": "/Homework/math",
					"sharing_info": {
						"read_only": false,
						"parent_shared_folder_id": "84528192421",
						"traverse_only": false,
						"no_access": false
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					]
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
			"has_more": false
		}
	},
	"files/list_folder/get_latest_cursor": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder/get_latest_cursor",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "A way to quickly get a cursor for the folder's state. Unlike [list_folder](#fileslist_folder-see-docs), [list_folder/get_latest_cursor](#fileslist_folderget_latest_cursor-see-docs) doesn't return any entries. This endpoint is for app which only needs to know about new files and modifications and doesn't need to know about files that already exist in Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)?|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the folder you want to see the contents of."
				},
				{
					"name": "recursive",
					"type": "Boolean",
					"desc": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False."
				},
				{
					"name": "include_media_info",
					"type": "Boolean",
					"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
				},
				{
					"name": "include_deleted",
					"type": "Boolean",
					"desc": "If true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False."
				},
				{
					"name": "include_has_explicit_shared_members",
					"type": "Boolean",
					"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math",
				"recursive": false,
				"include_media_info": false,
				"include_deleted": false,
				"include_has_explicit_shared_members": false
			}
		},
		"returnParameters": {
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"files/list_folder/longpoll": {
		"uri": "https://notify.dropboxapi.com/2/files/list_folder/longpoll",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "A longpoll endpoint to wait for changes on an account. In conjunction with [list_folder/continue](#fileslist_foldercontinue-see-docs), this call gives you a low-latency way to monitor an account for file changes. The connection will block until there are changes available or a timeout occurs. This endpoint is useful mostly for client-side apps. If you're looking for server-side notifications, check out our webhooks documentation.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String(min_length=1)",
					"desc": "A cursor as returned by   or  . Cursors retrieved by setting ListFolderArg.include_media_info to true are not supported."
				},
				{
					"name": "timeout",
					"type": "UInt64",
					"desc": "A timeout in seconds. The request will block for at most this length of time, plus up to 90 seconds of random jitter added to avoid the thundering herd problem. Care should be taken when using this parameter, as some network infrastructure does not support long timeouts. The default for this field is 30."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"timeout": 30
			}
		},
		"returnParameters": {
			"changes": true
		}
	},
	"files/list_revisions": {
		"uri": "https://api.dropboxapi.com/2/files/list_revisions",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Return revisions of a file.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the file you want to see the revisions of."
				},
				{
					"name": "limit",
					"type": "UInt64",
					"desc": "The maximum number of revision entries returned. The default for this field is 10."
				}
			],
			"example": {
				"path": "/root/word.docx",
				"limit": 10
			}
		},
		"returnParameters": {
			"is_deleted": false,
			"entries": [
				{
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				}
			]
		}
	},
	"files/move": {
		"uri": "https://api.dropboxapi.com/2/files/move",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Move a file or folder to a different location in the user's Dropbox. If the source path is a folder all its contents will be moved.",
		"parameters": {
			"list": [
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "allow_shared_folder",
					"type": "Boolean",
					"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if from_path contains shared folder. This field is always true for  . The default for this field is False."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"from_path": "/Homework/math",
				"to_path": "/Homework/algebra",
				"allow_shared_folder": false,
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/move_batch": {
		"uri": "https://api.dropboxapi.com/2/files/move_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Move multiple files or folders to different locations at once in the user's Dropbox. This route is 'all or nothing', which means if one entry fails, the whole transaction will abort. This route will return job ID immediately and do the async moving job in background. Please use [move_batch/check](#filesmove_batchcheck-see-docs) to check the job status.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (RelocationPath)",
					"desc": "List of entries to be moved or copied. Each entry is  .",
					"parameters": [
						{
							"list": [
								{
									"name": "from_path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox to be copied or moved."
								},
								{
									"name": "to_path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox that is the destination."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "allow_shared_folder",
					"type": "Boolean",
					"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if RelocationPath.from_path contains shared folder.  This field is always true for  . The default for this field is False."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"entries": [
					{
						"from_path": "/Homework/math",
						"to_path": "/Homework/algebra"
					}
				],
				"allow_shared_folder": false,
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/move_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/move_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [move_batch](#filesmove_batch-see-docs). If success, it returns list of results for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/move_v2": {
		"uri": "https://api.dropboxapi.com/2/files/move_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Move a file or folder to a different location in the user's Dropbox. If the source path is a folder all its contents will be moved.",
		"parameters": {
			"list": [
				{
					"name": "from_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to be copied or moved."
				},
				{
					"name": "to_path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox that is the destination."
				},
				{
					"name": "allow_shared_folder",
					"type": "Boolean",
					"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if from_path contains shared folder. This field is always true for  . The default for this field is False."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False."
				},
				{
					"name": "allow_ownership_transfer",
					"type": "Boolean",
					"desc": "Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies. The default for this field is False."
				}
			],
			"example": {
				"from_path": "/Homework/math",
				"to_path": "/Homework/algebra",
				"allow_shared_folder": false,
				"autorename": false,
				"allow_ownership_transfer": false
			}
		},
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			}
		}
	},
	"files/permanently_delete": {
		"uri": "https://api.dropboxapi.com/2/files/permanently_delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Permanently delete the file or folder at a given path (see https://www.dropbox.com/en/help/40). Note: This endpoint is only available for Dropbox Business apps.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to delete."
				}
			],
			"example": {
				"path": "/Homework/math/Prime_Numbers.txt"
			}
		},
		"returnParameters": null
	},
	"files/properties/add": {
		"uri": "https://api.dropboxapi.com/2/files/properties/add",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Add custom properties to a file using a filled property template. See properties/template/add to create new property templates.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)",
					"desc": "Filled custom property templates associated with a file.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for a property template type."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for a property template type."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		},
		"returnParameters": null
	},
	"files/properties/overwrite": {
		"uri": "https://api.dropboxapi.com/2/files/properties/overwrite",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Overwrite custom properties from a specified template associated with a file.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file."
				},
				{
					"name": "property_groups",
					"type": "List of (PropertyGroup)",
					"desc": "Filled custom property templates associated with a file.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for a property template type."
								},
								{
									"name": "fields",
									"type": "List of (PropertyField)",
									"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for a property template type."
				},
				{
					"name": "fields",
					"type": "List of (PropertyField)",
					"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				]
			}
		},
		"returnParameters": null
	},
	"files/properties/remove": {
		"uri": "https://api.dropboxapi.com/2/files/properties/remove",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Remove all custom properties from a specified template associated with a file. To remove specific property key value pairs, see [properties/update](#filespropertiesupdate-see-docs). To update a property template, see properties/template/update. Property templates can't be removed once created.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file."
				},
				{
					"name": "property_template_ids",
					"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"))",
					"desc": "A list of identifiers for a property template created by route properties/template/add."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"property_template_ids": [
					"ptid:1a5n2i6d3OYEAAAAAAAAAYa"
				]
			}
		},
		"returnParameters": null
	},
	"files/properties/template/get": {
		"uri": "https://api.dropboxapi.com/2/files/properties/template/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get the schema for a specified template.",
		"parameters": {
			"list": [
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "An identifier for property template added by route properties/template/add."
				}
			],
			"example": {
				"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa"
			}
		},
		"returnParameters": {
			"name": "Security",
			"description": "These properties describe how confidential this file is.",
			"fields": [
				{
					"name": "Security Policy",
					"description": "This is the security policy of the file or folder described.\nPolicies can be Confidential, Public or Internal.",
					"type": {
						".tag": "string"
					}
				}
			]
		}
	},
	"files/properties/template/list": {
		"uri": "https://api.dropboxapi.com/2/files/properties/template/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get the property template identifiers for a user. To get the schema of each template use [properties/template/get](#filespropertiestemplateget-see-docs).",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"template_ids": [
				"ptid:1a5n2i6d3OYEAAAAAAAAAYa"
			]
		}
	},
	"files/properties/update": {
		"uri": "https://api.dropboxapi.com/2/files/properties/update",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Add, update or remove custom properties from a specified template associated with a file. Fields that already exist and not described in the request will not be modified.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
					"desc": "A unique identifier for the file."
				},
				{
					"name": "update_property_groups",
					"type": "List of (PropertyGroupUpdate)",
					"desc": "Filled custom property templates associated with a file.",
					"parameters": [
						{
							"list": [
								{
									"name": "template_id",
									"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
									"desc": "A unique identifier for a property template."
								},
								{
									"name": "add_or_update_fields",
									"type": "List of (PropertyField)?",
									"desc": "List of property fields to update if the field already exists. If the field doesn't exist, add the field to the property group. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "name",
													"type": "String",
													"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
												},
												{
													"name": "value",
													"type": "String",
													"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								},
								{
									"name": "remove_fields",
									"type": "List of (String)?",
									"desc": "List of property field names to remove from property group if the field exists. This field is optional."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "template_id",
					"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
					"desc": "A unique identifier for a property template."
				},
				{
					"name": "add_or_update_fields",
					"type": "List of (PropertyField)?",
					"desc": "List of property fields to update if the field already exists. If the field doesn't exist, add the field to the property group. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "name",
									"type": "String",
									"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
								},
								{
									"name": "value",
									"type": "String",
									"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "name",
					"type": "String",
					"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
				},
				{
					"name": "value",
					"type": "String",
					"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
				},
				{
					"name": "remove_fields",
					"type": "List of (String)?",
					"desc": "List of property field names to remove from property group if the field exists. This field is optional."
				}
			],
			"example": {
				"path": "/my_awesome/word.docx",
				"update_property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"add_or_update_fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						],
						"remove_fields": []
					}
				]
			}
		},
		"returnParameters": null
	},
	"files/restore": {
		"uri": "https://api.dropboxapi.com/2/files/restore",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Restore a file to a specific revision.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the file you want to restore."
				},
				{
					"name": "rev",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "The revision to restore for the file."
				}
			],
			"example": {
				"path": "/root/word.docx",
				"rev": "a1c10ce0dd78"
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/save_url": {
		"uri": "https://api.dropboxapi.com/2/files/save_url",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Save a specified URL into a file in user's Dropbox. If the given path already exists, the file will be renamed to avoid the conflict (e.g. myfile (1).txt).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")",
					"desc": "The path in Dropbox where the URL will be saved to."
				},
				{
					"name": "url",
					"type": "String",
					"desc": "The URL to be saved."
				}
			],
			"example": {
				"path": "/a.txt",
				"url": "http://example.com/a.txt"
			}
		},
		"returnParameters": null
	},
	"files/save_url/check_job_status": {
		"uri": "https://api.dropboxapi.com/2/files/save_url/check_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Check the status of a [save_url](#filessave_url-see-docs) job.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "in_progress"
		}
	},
	"files/search": {
		"uri": "https://api.dropboxapi.com/2/files/search",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Searches for files and folders. Note: Recent changes may not immediately be reflected in search results due to a short delay in indexing.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)?|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path in the user's Dropbox to search. Should probably be a folder."
				},
				{
					"name": "query",
					"type": "String",
					"desc": "The string to search for. The search string is split on spaces into multiple tokens. For file name searching, the last token is used for prefix matching (i.e. \"bat c\" matches \"bat cave\" but not \"batman car\")."
				},
				{
					"name": "start",
					"type": "UInt64",
					"desc": "The starting index within the search results (used for paging). The default for this field is 0."
				},
				{
					"name": "max_results",
					"type": "UInt64",
					"desc": "The maximum number of search results to return. The default for this field is 100."
				},
				{
					"name": "mode",
					"type": "SearchMode",
					"desc": "The search mode (filename, filename_and_content, or deleted_filename). Note that searching file content is only available for Dropbox Business accounts. The default for this union is filename.",
					"parameters": [
						{
							"list": [
								{
									"name": "filename",
									"type": "Void",
									"desc": "Search file and folder names."
								},
								{
									"name": "filename_and_content",
									"type": "Void",
									"desc": "Search file and folder names as well as file contents."
								},
								{
									"name": "deleted_filename",
									"type": "Void",
									"desc": "Search for deleted file and folder names."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "filename",
					"type": "Void",
					"desc": "Search file and folder names."
				},
				{
					"name": "filename_and_content",
					"type": "Void",
					"desc": "Search file and folder names as well as file contents."
				},
				{
					"name": "deleted_filename",
					"type": "Void",
					"desc": "Search for deleted file and folder names."
				}
			],
			"example": {
				"path": "",
				"query": "prime numbers",
				"start": 0,
				"max_results": 100,
				"mode": "filename"
			}
		},
		"returnParameters": {
			"matches": [
				{
					"match_type": {
						".tag": "content"
					},
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			],
			"more": false,
			"start": 1
		}
	},
	"files/upload": {
		"uri": "https://content.dropboxapi.com/2/files/upload",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Create a new file with the contents provided in the request. Do not use this to upload a file larger than 150 MB. Instead, create an upload session with [upload_session/start](#filesupload_sessionstart-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				}
			],
			"example": {
				"path": "/Homework/math/Matrices.txt",
				"mode": "add",
				"autorename": true,
				"mute": false
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/upload_session/append": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/append",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Append more data to an upload session. A single request should not upload more than 150 MB.",
		"parameters": {
			"list": [
				{
					"name": "session_id",
					"type": "String",
					"desc": "The upload session ID (returned by  )."
				},
				{
					"name": "offset",
					"type": "UInt64",
					"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
				}
			],
			"example": {
				"session_id": "1234faaf0678bcde",
				"offset": 0
			}
		},
		"returnParameters": null
	},
	"files/upload_session/append_v2": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/append_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Append more data to an upload session. When the parameter close is set, this call will close the session. A single request should not upload more than 150 MB.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "UploadSessionCursor",
					"desc": "Contains the upload session ID and the offset.",
					"parameters": [
						{
							"list": [
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "session_id",
					"type": "String",
					"desc": "The upload session ID (returned by  )."
				},
				{
					"name": "offset",
					"type": "UInt64",
					"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
				},
				{
					"name": "close",
					"type": "Boolean",
					"desc": "If true, the current session will be closed, at which point you won't be able to call   anymore with the current session. The default for this field is False."
				}
			],
			"example": {
				"cursor": {
					"session_id": "1234faaf0678bcde",
					"offset": 0
				},
				"close": false
			}
		},
		"returnParameters": null
	},
	"files/upload_session/finish": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/finish",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Finish an upload session and save the uploaded data to the given file path. A single request should not upload more than 150 MB.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "UploadSessionCursor",
					"desc": "Contains the upload session ID and the offset.",
					"parameters": [
						{
							"list": [
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "session_id",
					"type": "String",
					"desc": "The upload session ID (returned by  )."
				},
				{
					"name": "offset",
					"type": "UInt64",
					"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
				},
				{
					"name": "commit",
					"type": "CommitInfo",
					"desc": "Contains the path and other optional modifiers for the commit.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				}
			],
			"example": {
				"cursor": {
					"session_id": "1234faaf0678bcde",
					"offset": 0
				},
				"commit": {
					"path": "/Homework/math/Matrices.txt",
					"mode": "add",
					"autorename": true,
					"mute": false
				}
			}
		},
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/upload_session/finish_batch": {
		"uri": "https://api.dropboxapi.com/2/files/upload_session/finish_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "This route helps you commit many files at once into a user's Dropbox. Use [upload_session/start](#filesupload_sessionstart-see-docs) and [upload_session/append_v2](#filesupload_sessionappend_v2-see-docs) to upload file contents. We recommend uploading many files in parallel to increase throughput. Once the file contents have been uploaded, rather than calling [upload_session/finish](#filesupload_sessionfinish-see-docs), use this route to finish all your upload sessions in a single request. UploadSessionStartArg.close or UploadSessionAppendArg.close needs to be true for the last [upload_session/start](#filesupload_sessionstart-see-docs) or [upload_session/append_v2](#filesupload_sessionappend_v2-see-docs) call. This route will return a job_id immediately and do the async commit job in background. Use [upload_session/finish_batch/check](#filesupload_sessionfinish_batchcheck-see-docs) to check the job status. For the same account, this route should be executed serially. That means you should not start the next job before current job finishes. We allow up to 1000 entries in a single request.",
		"parameters": {
			"list": [
				{
					"name": "entries",
					"type": "List of (UploadSessionFinishArg, max_items=1000)",
					"desc": "Commit information for each file in the batch.",
					"parameters": [
						{
							"list": [
								{
									"name": "cursor",
									"type": "UploadSessionCursor",
									"desc": "Contains the upload session ID and the offset.",
									"parameters": [
										{
											"list": [
												{
													"name": "session_id",
													"type": "String",
													"desc": "The upload session ID (returned by  )."
												},
												{
													"name": "offset",
													"type": "UInt64",
													"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								},
								{
									"name": "commit",
									"type": "CommitInfo",
									"desc": "Contains the path and other optional modifiers for the commit.",
									"parameters": [
										{
											"list": [
												{
													"name": "path",
													"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
													"desc": "Path in the user's Dropbox to save the file."
												},
												{
													"name": "mode",
													"type": "WriteMode",
													"desc": "Selects what to do if the file already exists. The default for this union is add.",
													"parameters": [
														{
															"list": [
																{
																	"name": "add",
																	"type": "Void",
																	"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
																},
																{
																	"name": "overwrite",
																	"type": "Void",
																	"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
																},
																{
																	"name": "update",
																	"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
																	"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
																}
															],
															"example": null
														}
													]
												},
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												},
												{
													"name": "autorename",
													"type": "Boolean",
													"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
												},
												{
													"name": "client_modified",
													"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
													"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
												},
												{
													"name": "mute",
													"type": "Boolean",
													"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
												}
											],
											"example": null
										},
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "cursor",
					"type": "UploadSessionCursor",
					"desc": "Contains the upload session ID and the offset.",
					"parameters": [
						{
							"list": [
								{
									"name": "session_id",
									"type": "String",
									"desc": "The upload session ID (returned by  )."
								},
								{
									"name": "offset",
									"type": "UInt64",
									"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "session_id",
					"type": "String",
					"desc": "The upload session ID (returned by  )."
				},
				{
					"name": "offset",
					"type": "UInt64",
					"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
				},
				{
					"name": "commit",
					"type": "CommitInfo",
					"desc": "Contains the path and other optional modifiers for the commit.",
					"parameters": [
						{
							"list": [
								{
									"name": "path",
									"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
									"desc": "Path in the user's Dropbox to save the file."
								},
								{
									"name": "mode",
									"type": "WriteMode",
									"desc": "Selects what to do if the file already exists. The default for this union is add.",
									"parameters": [
										{
											"list": [
												{
													"name": "add",
													"type": "Void",
													"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
												},
												{
													"name": "overwrite",
													"type": "Void",
													"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
												},
												{
													"name": "update",
													"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
													"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								},
								{
									"name": "autorename",
									"type": "Boolean",
									"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
								},
								{
									"name": "client_modified",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
								},
								{
									"name": "mute",
									"type": "Boolean",
									"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "Path in the user's Dropbox to save the file."
				},
				{
					"name": "mode",
					"type": "WriteMode",
					"desc": "Selects what to do if the file already exists. The default for this union is add.",
					"parameters": [
						{
							"list": [
								{
									"name": "add",
									"type": "Void",
									"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
								},
								{
									"name": "overwrite",
									"type": "Void",
									"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
								},
								{
									"name": "update",
									"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
									"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "add",
					"type": "Void",
					"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
				},
				{
					"name": "overwrite",
					"type": "Void",
					"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
				},
				{
					"name": "update",
					"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
					"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
				},
				{
					"name": "autorename",
					"type": "Boolean",
					"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
				},
				{
					"name": "client_modified",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
				},
				{
					"name": "mute",
					"type": "Boolean",
					"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
				}
			],
			"example": {
				"entries": [
					{
						"cursor": {
							"session_id": "1234faaf0678bcde",
							"offset": 0
						},
						"commit": {
							"path": "/Homework/math/Matrices.txt",
							"mode": {
								".tag": "add"
							},
							"autorename": true,
							"mute": false
						}
					}
				]
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				}
			]
		}
	},
	"files/upload_session/finish_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/upload_session/finish_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for [upload_session/finish_batch](#filesupload_sessionfinish_batch-see-docs). If success, it returns list of result for each entry.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				}
			]
		}
	},
	"files/upload_session/start": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/start",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"category": "UPLOAD",
		"description": "Upload sessions allow you to upload a single file in one or more requests, for example where the size of the file is greater than 150 MB.  This call starts a new upload session with the given data. You can then use [upload_session/append_v2](#filesupload_sessionappend_v2-see-docs) to add more data and [upload_session/finish](#filesupload_sessionfinish-see-docs) to save all the data to a file in Dropbox. A single request should not upload more than 150 MB. An upload session can be used for a maximum of 48 hours. Attempting to use an UploadSessionStartResult.session_id with [upload_session/append_v2](#filesupload_sessionappend_v2-see-docs) or [upload_session/finish](#filesupload_sessionfinish-see-docs) more than 48 hours after its creation will return a UploadSessionLookupError.not_found.",
		"parameters": {
			"list": [
				{
					"name": "close",
					"type": "Boolean",
					"desc": "If true, the current session will be closed, at which point you won't be able to call   anymore with the current session. The default for this field is False."
				}
			],
			"example": {
				"close": false
			}
		},
		"returnParameters": {
			"session_id": "1234faaf0678bcde"
		}
	},
	"paper/docs/archive": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/archive",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Marks the given Paper doc as archived. Note: This action can be performed or undone by anyone with edit permissions to the doc.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q"
			}
		},
		"returnParameters": null
	},
	"paper/docs/download": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/download",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Exports and downloads Paper doc either as HTML or markdown.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "export_format",
					"type": "ExportFormat",
					"desc": "",
					"parameters": [
						{
							"list": [
								{
									"name": "html",
									"type": "Void",
									"desc": "The HTML export format."
								},
								{
									"name": "markdown",
									"type": "Void",
									"desc": "The markdown export format."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "html",
					"type": "Void",
					"desc": "The HTML export format."
				},
				{
					"name": "markdown",
					"type": "Void",
					"desc": "The markdown export format."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"export_format": "markdown"
			}
		},
		"returnParameters": {
			"owner": "james@example.com",
			"title": "Week one retention",
			"revision": 456736745,
			"mime_type": "text/x-markdown"
		}
	},
	"paper/docs/folder_users/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/folder_users/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Lists the users who are explicitly invited to the Paper folder in which the Paper doc is contained. For private folders all users (including owner) shared on the folder are listed and for team folders all non-team users shared on the folder are returned.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "limit",
					"type": "Int32",
					"desc": "Size limit per batch. The maximum number of users that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"limit": 100
			}
		},
		"returnParameters": {
			"invitees": [
				{
					".tag": "email",
					"email": "jessica@example.com"
				}
			],
			"users": [
				{
					"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"same_team": true,
					"team_member_id": "dbmid:abcd1234"
				}
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"paper/docs/folder_users/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/folder_users/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [docs/folder_users/list](#paperdocsfolder_userslist-see-docs), use this to paginate through all users on the Paper folder.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor obtained from   or  . Allows for pagination."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"cursor": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd"
			}
		},
		"returnParameters": {
			"invitees": [
				{
					".tag": "email",
					"email": "jessica@example.com"
				}
			],
			"users": [
				{
					"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"same_team": true,
					"team_member_id": "dbmid:abcd1234"
				}
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"paper/docs/get_folder_info": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/get_folder_info",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Retrieves folder information for the given Paper doc. This includes:   - folder sharing policy; permissions for subfolders are set by the top-level folder.   - full 'filepath', i.e. the list of folders (both folderId and folderName) from the root folder to the folder directly containing the Paper doc.  Note: If the Paper doc is not in any folder (aka unfiled) the response will be empty.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q"
			}
		},
		"returnParameters": {
			"folder_sharing_policy_type": {
				".tag": "team"
			},
			"folders": [
				{
					"id": "e.gGYT6HSafpMej9bUv306oGm60vrHiCHgEFnzziioPGCvHf",
					"name": "Design docs"
				}
			]
		}
	},
	"paper/docs/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Return the list of all Paper docs according to the argument specifications. To iterate over through the full pagination, pass the cursor to [docs/list/continue](#paperdocslistcontinue-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "filter_by",
					"type": "ListPaperDocsFilterBy",
					"desc": "Allows user to specify how the Paper docs should be filtered. The default for this union is docs_accessed.",
					"parameters": [
						{
							"list": [
								{
									"name": "docs_accessed",
									"type": "Void",
									"desc": "Fetches all Paper doc IDs that the user has ever accessed."
								},
								{
									"name": "docs_created",
									"type": "Void",
									"desc": "Fetches only the Paper doc IDs that the user has created."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "docs_accessed",
					"type": "Void",
					"desc": "Fetches all Paper doc IDs that the user has ever accessed."
				},
				{
					"name": "docs_created",
					"type": "Void",
					"desc": "Fetches only the Paper doc IDs that the user has created."
				},
				{
					"name": "sort_by",
					"type": "ListPaperDocsSortBy",
					"desc": "Allows user to specify how the Paper docs should be sorted. The default for this union is accessed.",
					"parameters": [
						{
							"list": [
								{
									"name": "accessed",
									"type": "Void",
									"desc": "Sorts the Paper docs by the time they were last accessed."
								},
								{
									"name": "modified",
									"type": "Void",
									"desc": "Sorts the Paper docs by the time they were last modified."
								},
								{
									"name": "created",
									"type": "Void",
									"desc": "Sorts the Paper docs by the creation time."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "accessed",
					"type": "Void",
					"desc": "Sorts the Paper docs by the time they were last accessed."
				},
				{
					"name": "modified",
					"type": "Void",
					"desc": "Sorts the Paper docs by the time they were last modified."
				},
				{
					"name": "created",
					"type": "Void",
					"desc": "Sorts the Paper docs by the creation time."
				},
				{
					"name": "sort_order",
					"type": "ListPaperDocsSortOrder",
					"desc": "Allows user to specify the sort order of the result. The default for this union is ascending.",
					"parameters": [
						{
							"list": [
								{
									"name": "ascending",
									"type": "Void",
									"desc": "Sorts the search result in ascending order."
								},
								{
									"name": "descending",
									"type": "Void",
									"desc": "Sorts the search result in descending order."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "ascending",
					"type": "Void",
					"desc": "Sorts the search result in ascending order."
				},
				{
					"name": "descending",
					"type": "Void",
					"desc": "Sorts the search result in descending order."
				},
				{
					"name": "limit",
					"type": "Int32",
					"desc": "Size limit per batch. The maximum number of docs that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
				}
			],
			"example": {
				"filter_by": "docs_created",
				"sort_by": "modified",
				"sort_order": "descending",
				"limit": 100
			}
		},
		"returnParameters": {
			"doc_ids": [
				"zO1E7coc54sE8IuMdUoxz",
				"mm1AmDgVyZ10zf7qb0qzn",
				"dByYHZvTPBnXilGgyc5mm"
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": true
		}
	},
	"paper/docs/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [docs/list](#paperdocslist-see-docs), use this to paginate through all Paper doc.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor obtained from   or  . Allows for pagination."
				}
			],
			"example": {
				"cursor": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd"
			}
		},
		"returnParameters": {
			"doc_ids": [
				"zO1E7coc54sE8IuMdUoxz",
				"mm1AmDgVyZ10zf7qb0qzn",
				"dByYHZvTPBnXilGgyc5mm"
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": true
		}
	},
	"paper/docs/permanently_delete": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/permanently_delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Permanently deletes the given Paper doc. This operation is final as the doc cannot be recovered.  Note: This action can be performed only by the doc owner.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q"
			}
		},
		"returnParameters": null
	},
	"paper/docs/sharing_policy/get": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/sharing_policy/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Gets the default sharing policy for the given Paper doc.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q"
			}
		},
		"returnParameters": {
			"public_sharing_policy": {
				".tag": "people_with_link_can_edit"
			},
			"team_sharing_policy": {
				".tag": "people_with_link_can_edit"
			}
		}
	},
	"paper/docs/sharing_policy/set": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/sharing_policy/set",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Sets the default sharing policy for the given Paper doc. The default 'team_sharing_policy' can be changed only by teams, omit this field for personal accounts.  Note: 'public_sharing_policy' cannot be set to the value 'disabled' because this setting can be changed only via the team admin console.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "sharing_policy",
					"type": "SharingPolicy",
					"desc": "The default sharing policy to be set for the Paper doc.",
					"parameters": [
						{
							"list": [
								{
									"name": "public_sharing_policy",
									"type": "SharingPublicPolicyType?",
									"desc": "This value applies to the non-team members. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "people_with_link_can_edit",
													"type": "Void",
													"desc": "Users who have a link to this doc can edit it."
												},
												{
													"name": "people_with_link_can_view_and_comment",
													"type": "Void",
													"desc": "Users who have a link to this doc can view and comment on it."
												},
												{
													"name": "invite_only",
													"type": "Void",
													"desc": "Users must be explicitly invited to this doc."
												},
												{
													"name": "disabled",
													"type": "Void",
													"desc": "Value used to indicate that doc sharing is enabled only within team."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Value used to indicate that doc sharing is enabled only within team."
								},
								{
									"name": "team_sharing_policy",
									"type": "SharingTeamPolicyType?",
									"desc": "This value applies to the team members only. The value is null for all personal accounts. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "people_with_link_can_edit",
													"type": "Void",
													"desc": "Users who have a link to this doc can edit it."
												},
												{
													"name": "people_with_link_can_view_and_comment",
													"type": "Void",
													"desc": "Users who have a link to this doc can view and comment on it."
												},
												{
													"name": "invite_only",
													"type": "Void",
													"desc": "Users must be explicitly invited to this doc."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Value used to indicate that doc sharing is enabled only within team."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public_sharing_policy",
					"type": "SharingPublicPolicyType?",
					"desc": "This value applies to the non-team members. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Value used to indicate that doc sharing is enabled only within team."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "people_with_link_can_edit",
					"type": "Void",
					"desc": "Users who have a link to this doc can edit it."
				},
				{
					"name": "people_with_link_can_view_and_comment",
					"type": "Void",
					"desc": "Users who have a link to this doc can view and comment on it."
				},
				{
					"name": "invite_only",
					"type": "Void",
					"desc": "Users must be explicitly invited to this doc."
				},
				{
					"name": "disabled",
					"type": "Void",
					"desc": "Value used to indicate that doc sharing is enabled only within team."
				},
				{
					"name": "team_sharing_policy",
					"type": "SharingTeamPolicyType?",
					"desc": "This value applies to the team members only. The value is null for all personal accounts. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "people_with_link_can_edit",
									"type": "Void",
									"desc": "Users who have a link to this doc can edit it."
								},
								{
									"name": "people_with_link_can_view_and_comment",
									"type": "Void",
									"desc": "Users who have a link to this doc can view and comment on it."
								},
								{
									"name": "invite_only",
									"type": "Void",
									"desc": "Users must be explicitly invited to this doc."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "people_with_link_can_edit",
					"type": "Void",
					"desc": "Users who have a link to this doc can edit it."
				},
				{
					"name": "people_with_link_can_view_and_comment",
					"type": "Void",
					"desc": "Users who have a link to this doc can view and comment on it."
				},
				{
					"name": "invite_only",
					"type": "Void",
					"desc": "Users must be explicitly invited to this doc."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"sharing_policy": {
					"public_sharing_policy": "people_with_link_can_edit",
					"team_sharing_policy": "people_with_link_can_edit"
				}
			}
		},
		"returnParameters": null
	},
	"paper/docs/users/add": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/add",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor to add users to a Paper doc or change their permissions using their email address or Dropbox account ID.  Note: The Doc owner's permissions cannot be changed.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "members",
					"type": "List of (AddMember, max_items=20)",
					"desc": "User which should be added to the Paper doc. Specify only email address or Dropbox account ID.",
					"parameters": [
						{
							"list": [
								{
									"name": "member",
									"type": "MemberSelector",
									"desc": "User which should be added to the Paper doc. Specify only email address or Dropbox account ID.",
									"parameters": [
										{
											"list": [
												{
													"name": "dropbox_id",
													"type": "String(min_length=1)",
													"desc": "Dropbox account, team member, or group ID of member."
												},
												{
													"name": "email",
													"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
													"desc": "E-mail address of member."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								},
								{
									"name": "permission_level",
									"type": "PaperDocPermissionLevel",
									"desc": "Permission for the user. The default for this union is edit.",
									"parameters": [
										{
											"list": [
												{
													"name": "edit",
													"type": "Void",
													"desc": "User will be granted edit permissions."
												},
												{
													"name": "view_and_comment",
													"type": "Void",
													"desc": "User will be granted view and comment permissions."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "edit",
									"type": "Void",
									"desc": "User will be granted edit permissions."
								},
								{
									"name": "view_and_comment",
									"type": "Void",
									"desc": "User will be granted view and comment permissions."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "edit",
									"type": "Void",
									"desc": "User will be granted edit permissions."
								},
								{
									"name": "view_and_comment",
									"type": "Void",
									"desc": "User will be granted view and comment permissions."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "User which should be added to the Paper doc. Specify only email address or Dropbox account ID.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				},
				{
					"name": "permission_level",
					"type": "PaperDocPermissionLevel",
					"desc": "Permission for the user. The default for this union is edit.",
					"parameters": [
						{
							"list": [
								{
									"name": "edit",
									"type": "Void",
									"desc": "User will be granted edit permissions."
								},
								{
									"name": "view_and_comment",
									"type": "Void",
									"desc": "User will be granted view and comment permissions."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "edit",
					"type": "Void",
					"desc": "User will be granted edit permissions."
				},
				{
					"name": "view_and_comment",
					"type": "Void",
					"desc": "User will be granted view and comment permissions."
				},
				{
					"name": "custom_message",
					"type": "String?",
					"desc": "A personal message that will be emailed to each successfully added member. This field is optional."
				},
				{
					"name": "quiet",
					"type": "Boolean",
					"desc": "Clients should set this to true if no email message shall be sent to added users. The default for this field is False."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"members": [
					{
						"member": {
							".tag": "email",
							"email": "justin@example.com"
						},
						"permission_level": {
							".tag": "view_and_comment"
						}
					}
				],
				"custom_message": "Welcome to Paper.",
				"quiet": false
			}
		},
		"returnParameters": null
	},
	"paper/docs/users/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Lists all users who visited the Paper doc or users with explicit access. This call excludes users who have been removed. The list is sorted by the date of the visit or the share date. The list will include both users, the explicitly shared ones as well as those who came in using the Paper url link.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "limit",
					"type": "Int32",
					"desc": "Size limit per batch. The maximum number of users that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
				},
				{
					"name": "filter_by",
					"type": "UserOnPaperDocFilter",
					"desc": "Specify this attribute if you want to obtain users that have already accessed the Paper doc. The default for this union is shared.",
					"parameters": [
						{
							"list": [
								{
									"name": "visited",
									"type": "Void",
									"desc": "all users who have visited the Paper doc."
								},
								{
									"name": "shared",
									"type": "Void",
									"desc": "All uses who are shared on the Paper doc. This includes all users who have visited the Paper doc as well as those who have not."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "visited",
					"type": "Void",
					"desc": "all users who have visited the Paper doc."
				},
				{
					"name": "shared",
					"type": "Void",
					"desc": "All uses who are shared on the Paper doc. This includes all users who have visited the Paper doc as well as those who have not."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"limit": 100,
				"filter_by": "shared"
			}
		},
		"returnParameters": {
			"invitees": [
				{
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permission_level": {
						".tag": "edit"
					}
				}
			],
			"users": [
				{
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permission_level": {
						".tag": "view_and_comment"
					}
				}
			],
			"doc_owner": {
				"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
				"same_team": true,
				"team_member_id": "dbmid:abcd1234"
			},
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"paper/docs/users/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [docs/users/list](#paperdocsuserslist-see-docs), use this to paginate through all users on the Paper doc.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor obtained from   or  . Allows for pagination."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"cursor": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd"
			}
		},
		"returnParameters": {
			"invitees": [
				{
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permission_level": {
						".tag": "edit"
					}
				}
			],
			"users": [
				{
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permission_level": {
						".tag": "view_and_comment"
					}
				}
			],
			"doc_owner": {
				"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
				"same_team": true,
				"team_member_id": "dbmid:abcd1234"
			},
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"paper/docs/users/remove": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/remove",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor to remove users from a Paper doc using their email address or Dropbox account ID.  Note: Doc owner cannot be removed.",
		"parameters": {
			"list": [
				{
					"name": "doc_id",
					"type": "String",
					"desc": "The Paper doc ID."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "User which should be removed from the Paper doc. Specify only email address or Dropbox account ID.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				}
			],
			"example": {
				"doc_id": "uaSvRuxvnkFa12PTkBv5q",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				}
			}
		},
		"returnParameters": null
	},
	"sharing/add_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/add_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Adds specified members to a file.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File to which to add members."
				},
				{
					"name": "members",
					"type": "List of (MemberSelector)",
					"desc": "Members to add. Note that even an email address is given, this may result in a user being directy added to the membership if that email is the user's main account email.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				},
				{
					"name": "custom_message",
					"type": "String?",
					"desc": "Message to send to added members in their invitation. This field is optional."
				},
				{
					"name": "quiet",
					"type": "Boolean",
					"desc": "Whether added members should be notified via device notifications of their invitation. The default for this field is False."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "AccessLevel union object, describing what access level we want to give new members. The default for this union is viewer.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				},
				{
					"name": "add_message_as_comment",
					"type": "Boolean",
					"desc": "If the custom message should be added as a comment on the file. The default for this field is False."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"members": [
					{
						".tag": "email",
						"email": "justin@example.com"
					}
				],
				"custom_message": "This is a custom message about ACME.doc",
				"quiet": false,
				"access_level": "viewer",
				"add_message_as_comment": false
			}
		},
		"returnParameters": null
	},
	"sharing/add_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/add_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor (if the ACL update policy allows) of a shared folder to add another member. For the new member to get access to all the functionality for this folder, you will need to call [mount_folder](#sharingmount_folder-see-docs) on their behalf. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "members",
					"type": "List of (AddMember)",
					"desc": "The intended list of members to add.  Added members will receive invites to join the shared folder.",
					"parameters": [
						{
							"list": [
								{
									"name": "member",
									"type": "MemberSelector",
									"desc": "The member to add to the shared folder.",
									"parameters": [
										{
											"list": [
												{
													"name": "dropbox_id",
													"type": "String(min_length=1)",
													"desc": "Dropbox account, team member, or group ID of member."
												},
												{
													"name": "email",
													"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
													"desc": "E-mail address of member."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								},
								{
									"name": "access_level",
									"type": "AccessLevel",
									"desc": "The access level to grant member to the shared folder.  AccessLevel.owner is disallowed. The default for this union is viewer.",
									"parameters": [
										{
											"list": [
												{
													"name": "owner",
													"type": "Void",
													"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
												},
												{
													"name": "editor",
													"type": "Void",
													"desc": "The collaborator can both view and edit the shared folder."
												},
												{
													"name": "viewer",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder."
												},
												{
													"name": "viewer_no_comment",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder and does not have any access to comments."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member to add to the shared folder.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "The access level to grant member to the shared folder.  AccessLevel.owner is disallowed. The default for this union is viewer.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				},
				{
					"name": "quiet",
					"type": "Boolean",
					"desc": "Whether added members should be notified via email and device notifications of their invite. The default for this field is False."
				},
				{
					"name": "custom_message",
					"type": "String(min_length=1)?",
					"desc": "Optional message to display to added members in their invitation. This field is optional."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"members": [
					{
						"member": {
							".tag": "email",
							"email": "justin@example.com"
						},
						"access_level": {
							".tag": "editor"
						}
					},
					{
						"member": {
							".tag": "dropbox_id",
							"dropbox_id": "dbid:AAEufNrMPSPe0dMQijRP0N_aZtBJRm26W4Q"
						},
						"access_level": {
							".tag": "viewer"
						}
					}
				],
				"quiet": false,
				"custom_message": "Documentation for launch day"
			}
		},
		"returnParameters": null
	},
	"sharing/change_file_member_access": {
		"uri": "https://api.dropboxapi.com/2/sharing/change_file_member_access",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Identical to update_file_member but with less information returned.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File for which we are changing a member's access."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member whose access we are changing.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "The new access level for the member.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"access_level": "viewer"
			}
		},
		"returnParameters": null
	},
	"sharing/check_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "in_progress"
		}
	},
	"sharing/check_remove_member_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_remove_member_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for sharing a folder. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/check_share_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_share_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns the status of an asynchronous job for sharing a folder. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "async_job_id",
					"type": "String(min_length=1)",
					"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
				}
			],
			"example": {
				"async_job_id": "34g93hh34h04y384084"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"sharing/create_shared_link": {
		"uri": "https://api.dropboxapi.com/2/sharing/create_shared_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create a shared link. If a shared link already exists for the given path, that link is returned. Note that in the returned PathLinkMetadata, the PathLinkMetadata.url field is the shortened URL if CreateSharedLinkArg.short_url argument is set to true. Previously, it was technically possible to break a shared link by moving or renaming the corresponding file or folder. In the future, this will no longer be the case, so your app shouldn't rely on this behavior. Instead, if your app needs to revoke a shared link, use [revoke_shared_link](#sharingrevoke_shared_link-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String",
					"desc": "The path to share."
				},
				{
					"name": "short_url",
					"type": "Boolean",
					"desc": "Whether to return a shortened URL. The default for this field is False."
				},
				{
					"name": "pending_upload",
					"type": "PendingUploadMode?",
					"desc": "If it's okay to share a path that does not yet exist, set this to either PendingUploadMode.file or PendingUploadMode.folder to indicate whether to assume it's a file or folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "file",
									"type": "Void",
									"desc": "Assume pending uploads are files."
								},
								{
									"name": "folder",
									"type": "Void",
									"desc": "Assume pending uploads are folders."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "file",
					"type": "Void",
					"desc": "Assume pending uploads are files."
				},
				{
					"name": "folder",
					"type": "Void",
					"desc": "Assume pending uploads are folders."
				}
			],
			"example": {
				"path": "/Homework/Math/Prime_Numbers.txt",
				"short_url": false
			}
		},
		"returnParameters": {
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"visibility": {
				".tag": "public"
			},
			"path": "/Homework/Math/Prime_Numbers.txt"
		}
	},
	"sharing/create_shared_link_with_settings": {
		"uri": "https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Create a shared link with custom settings. If no settings are given then the default visibility is RequestedVisibility.public (The resolved visibility, though, may depend on other aspects such as team and shared folder settings).",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to be shared by the shared link"
				},
				{
					"name": "settings",
					"type": "SharedLinkSettings?",
					"desc": "The requested settings for the newly created shared link This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "requested_visibility",
									"type": "RequestedVisibility?",
									"desc": "The requested access for this shared link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Anyone who has received the link can access it. No login required."
												},
												{
													"name": "team_only",
													"type": "Void",
													"desc": "Only members of the same team can access the link. Login is required."
												},
												{
													"name": "password",
													"type": "Void",
													"desc": "A link-specific password is required to access the link. Login is not required."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "link_password",
									"type": "String?",
									"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
								},
								{
									"name": "expires",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "requested_visibility",
					"type": "RequestedVisibility?",
					"desc": "The requested access for this shared link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Anyone who has received the link can access it. No login required."
				},
				{
					"name": "team_only",
					"type": "Void",
					"desc": "Only members of the same team can access the link. Login is required."
				},
				{
					"name": "password",
					"type": "Void",
					"desc": "A link-specific password is required to access the link. Login is not required."
				},
				{
					"name": "link_password",
					"type": "String?",
					"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
				},
				{
					"name": "expires",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
				}
			],
			"example": {
				"path": "/Prime_Numbers.txt",
				"settings": {
					"requested_visibility": "public"
				}
			}
		},
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				}
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/get_file_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_file_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns shared file metadata.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "The file to query."
				},
				{
					"name": "actions",
					"type": "List of (FileAction)?",
					"desc": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's SharedFileMetadata.permissions field describing the actions the  authenticated user can perform on the file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information on the file."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the file."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the file."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Add a member with view permissions."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Add a member with view permissions but no comment permissions."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this file."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership to the file."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "This action is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link to the file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information on the file."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the file."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the file."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Add a member with view permissions."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Add a member with view permissions but no comment permissions."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this file."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership to the file."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "This action is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link to the file."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"actions": []
			}
		},
		"returnParameters": {
			"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
			"name": "file.txt",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
			"access_type": {
				".tag": "viewer"
			},
			"owner_team": {
				"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
				"name": "Acme, Inc."
			},
			"path_display": "/dir/file.txt",
			"path_lower": "/dir/file.txt",
			"permissions": [],
			"time_invited": "2016-01-20T00:00:00Z"
		}
	},
	"sharing/get_file_metadata/batch": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_file_metadata/batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns shared file metadata.",
		"parameters": {
			"list": [
				{
					"name": "files",
					"type": "List of (String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\"), max_items=100)",
					"desc": "The files to query."
				},
				{
					"name": "actions",
					"type": "List of (FileAction)?",
					"desc": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's SharedFileMetadata.permissions field describing the actions the  authenticated user can perform on the file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information on the file."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the file."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the file."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Add a member with view permissions."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Add a member with view permissions but no comment permissions."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this file."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership to the file."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "This action is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link to the file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information on the file."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the file."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the file."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Add a member with view permissions."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Add a member with view permissions but no comment permissions."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this file."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership to the file."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "This action is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link to the file."
				}
			],
			"example": {
				"files": [
					"id:3kmLmQFnf1AAAAAAAAAAAw",
					"id:VvTaJu2VZzAAAAAAAAAADQ"
				],
				"actions": []
			}
		},
		"returnParameters": null
	},
	"sharing/get_folder_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_folder_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns shared folder metadata by its folder ID. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "This action is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "This action is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"actions": []
			}
		},
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"sharing/get_shared_link_file": {
		"uri": "https://content.dropboxapi.com/2/sharing/get_shared_link_file",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "DOWNLOAD",
		"description": "Download the shared link's file from a user's Dropbox.",
		"parameters": {
			"list": [
				{
					"name": "url",
					"type": "String",
					"desc": "URL of the shared link."
				},
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")?",
					"desc": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. This field is optional."
				},
				{
					"name": "link_password",
					"type": "String?",
					"desc": "If the shared link has a password, this parameter can be used. This field is optional."
				}
			],
			"example": {
				"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"path": "/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				}
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/get_shared_link_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_shared_link_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get the shared link's metadata.",
		"parameters": {
			"list": [
				{
					"name": "url",
					"type": "String",
					"desc": "URL of the shared link."
				},
				{
					"name": "path",
					"type": "String(pattern=\"/(.|[\\r\\n])*\")?",
					"desc": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. This field is optional."
				},
				{
					"name": "link_password",
					"type": "String?",
					"desc": "If the shared link has a password, this parameter can be used. This field is optional."
				}
			],
			"example": {
				"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"path": "/Prime_Numbers.txt"
			}
		},
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				}
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/get_shared_links": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_shared_links",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns a list of LinkMetadata objects for this user, including collection links. If no path is given, returns a list of all shared links for the current user, including collection links, up to a maximum of 1000 links. If a non-empty path is given, returns a list of all shared links that allow access to the given path.  Collection links are never returned in this case. Note that the url field in the response is never the shortened URL.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String?",
					"desc": "See   description. This field is optional."
				}
			],
			"example": {
				"path": ""
			}
		},
		"returnParameters": null
	},
	"sharing/list_file_members": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Use to obtain the members who have been invited to a file, both inherited and uninherited members.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "The file for which you want to see members."
				},
				{
					"name": "actions",
					"type": "List of (MemberAction)?",
					"desc": "The actions for which to return permissions on a member. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Allow the member to keep a copy of the folder when removing."
								},
								{
									"name": "make_editor",
									"type": "Void",
									"desc": "Make the member an editor of the folder."
								},
								{
									"name": "make_owner",
									"type": "Void",
									"desc": "Make the member an owner of the folder."
								},
								{
									"name": "make_viewer",
									"type": "Void",
									"desc": "Make the member a viewer of the folder."
								},
								{
									"name": "make_viewer_no_comment",
									"type": "Void",
									"desc": "Make the member a viewer of the folder without commenting permissions."
								},
								{
									"name": "remove",
									"type": "Void",
									"desc": "Remove the member from the folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Allow the member to keep a copy of the folder when removing."
				},
				{
					"name": "make_editor",
					"type": "Void",
					"desc": "Make the member an editor of the folder."
				},
				{
					"name": "make_owner",
					"type": "Void",
					"desc": "Make the member an owner of the folder."
				},
				{
					"name": "make_viewer",
					"type": "Void",
					"desc": "Make the member a viewer of the folder."
				},
				{
					"name": "make_viewer_no_comment",
					"type": "Void",
					"desc": "Make the member a viewer of the folder without commenting permissions."
				},
				{
					"name": "remove",
					"type": "Void",
					"desc": "Remove the member from the folder."
				},
				{
					"name": "include_inherited",
					"type": "Boolean",
					"desc": "Whether to include members who only have access from a parent shared folder. The default for this field is True."
				},
				{
					"name": "limit",
					"type": "UInt32",
					"desc": "Number of members to return max per query. Defaults to 100 if no limit is specified. The default for this field is 100."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"include_inherited": true,
				"limit": 100
			}
		},
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			]
		}
	},
	"sharing/list_file_members/batch": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members/batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get members of multiple files at once. The arguments to this route are more limited, and the limit on query result size per file is more strict. To customize the results more, use the individual file endpoint. Inherited users and groups are not included in the result, and permissions are not returned for this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "files",
					"type": "List of (String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\"), max_items=100)",
					"desc": "Files for which to return members."
				},
				{
					"name": "limit",
					"type": "UInt32",
					"desc": "Number of members to return max per query. Defaults to 10 if no limit is specified. The default for this field is 10."
				}
			],
			"example": {
				"files": [
					"id:3kmLmQFnf1AAAAAAAAAAAw",
					"id:VvTaJu2VZzAAAAAAAAAADQ"
				],
				"limit": 10
			}
		},
		"returnParameters": null
	},
	"sharing/list_file_members/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_file_members](#sharinglist_file_members-see-docs) or [list_file_members/batch](#sharinglist_file_membersbatch-see-docs), use this to paginate through all shared file members.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by your last call to  ,  , or  ."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			]
		}
	},
	"sharing/list_folder_members": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folder_members",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns shared folder membership by its folder ID. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "actions",
					"type": "List of (MemberAction)?",
					"desc": "This is a list indicating whether each returned member will include a boolean value MemberPermission.allow that describes whether the current user can perform the MemberAction on the member. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Allow the member to keep a copy of the folder when removing."
								},
								{
									"name": "make_editor",
									"type": "Void",
									"desc": "Make the member an editor of the folder."
								},
								{
									"name": "make_owner",
									"type": "Void",
									"desc": "Make the member an owner of the folder."
								},
								{
									"name": "make_viewer",
									"type": "Void",
									"desc": "Make the member a viewer of the folder."
								},
								{
									"name": "make_viewer_no_comment",
									"type": "Void",
									"desc": "Make the member a viewer of the folder without commenting permissions."
								},
								{
									"name": "remove",
									"type": "Void",
									"desc": "Remove the member from the folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Allow the member to keep a copy of the folder when removing."
				},
				{
					"name": "make_editor",
					"type": "Void",
					"desc": "Make the member an editor of the folder."
				},
				{
					"name": "make_owner",
					"type": "Void",
					"desc": "Make the member an owner of the folder."
				},
				{
					"name": "make_viewer",
					"type": "Void",
					"desc": "Make the member a viewer of the folder."
				},
				{
					"name": "make_viewer_no_comment",
					"type": "Void",
					"desc": "Make the member a viewer of the folder without commenting permissions."
				},
				{
					"name": "remove",
					"type": "Void",
					"desc": "Remove the member from the folder."
				},
				{
					"name": "limit",
					"type": "UInt32",
					"desc": "The maximum number of results that include members, groups and invitees to return per request. The default for this field is 1000."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"actions": [],
				"limit": 10
			}
		},
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folder_members/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folder_members/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_folder_members](#sharinglist_folder_members-see-docs), use this to paginate through all shared folder members. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by your last call to   or  ."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folders": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folders",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Return the list of all shared folders the current user has access to. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "limit",
					"type": "UInt32",
					"desc": "The maximum number of results to return per request. The default for this field is 1000."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "This action is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "This action is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				}
			],
			"example": {
				"limit": 100,
				"actions": []
			}
		},
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": []
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folders/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folders/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_folders](#sharinglist_folders-see-docs), use this to paginate through all shared folders. The cursor must come from a previous call to [list_folders](#sharinglist_folders-see-docs) or [list_folders/continue](#sharinglist_folderscontinue-see-docs). Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by the previous API call specified in the endpoint description."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": []
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_mountable_folders": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_mountable_folders",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Return the list of all shared folders the current user can mount or unmount. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "limit",
					"type": "UInt32",
					"desc": "The maximum number of results to return per request. The default for this field is 1000."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "This action is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "This action is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				}
			],
			"example": {
				"limit": 100,
				"actions": []
			}
		},
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": []
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_mountable_folders/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_mountable_folders/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Once a cursor has been retrieved from [list_mountable_folders](#sharinglist_mountable_folders-see-docs), use this to paginate through all mountable shared folders. The cursor must come from a previous call to [list_mountable_folders](#sharinglist_mountable_folders-see-docs) or [list_mountable_folders/continue](#sharinglist_mountable_folderscontinue-see-docs). Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "The cursor returned by the previous API call specified in the endpoint description."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": []
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_received_files": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_received_files",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Returns a list of all files shared with current user.  Does not include files the user has received via shared folders, and does  not include unclaimed invitations.",
		"parameters": {
			"list": [
				{
					"name": "limit",
					"type": "UInt32",
					"desc": "Number of files to return max per query. Defaults to 100 if no limit is specified. The default for this field is 100."
				},
				{
					"name": "actions",
					"type": "List of (FileAction)?",
					"desc": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's SharedFileMetadata.permissions field describing the actions the  authenticated user can perform on the file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information on the file."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the file."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the file."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Add a member with view permissions."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Add a member with view permissions but no comment permissions."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this file."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership to the file."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "This action is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link to the file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information on the file."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the file."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the file."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Add a member with view permissions."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Add a member with view permissions but no comment permissions."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this file."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership to the file."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "This action is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link to the file."
				}
			],
			"example": {
				"limit": 100,
				"actions": []
			}
		},
		"returnParameters": {
			"entries": [
				{
					"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
					"name": "file.txt",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
					"access_type": {
						".tag": "viewer"
					},
					"owner_team": {
						"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
						"name": "Acme, Inc."
					},
					"path_display": "/dir/file.txt",
					"path_lower": "/dir/file.txt",
					"permissions": [],
					"time_invited": "2016-01-20T00:00:00Z"
				}
			],
			"cursor": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9cmV2aXNpb24H3Qf6o1fkHxQ"
		}
	},
	"sharing/list_received_files/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_received_files/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get more results with a cursor from [list_received_files](#sharinglist_received_files-see-docs).",
		"parameters": {
			"list": [
				{
					"name": "cursor",
					"type": "String",
					"desc": "Cursor in ListFilesResult.cursor."
				}
			],
			"example": {
				"cursor": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9emfGRlc2MCRWxpbWl0BGRId"
			}
		},
		"returnParameters": {
			"entries": [
				{
					"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
					"name": "file.txt",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
					"access_type": {
						".tag": "viewer"
					},
					"owner_team": {
						"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
						"name": "Acme, Inc."
					},
					"path_display": "/dir/file.txt",
					"path_lower": "/dir/file.txt",
					"permissions": [],
					"time_invited": "2016-01-20T00:00:00Z"
				}
			],
			"cursor": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9cmV2aXNpb24H3Qf6o1fkHxQ"
		}
	},
	"sharing/list_shared_links": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_shared_links",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "List shared links of this user. If no path is given, returns a list of all shared links for the current user. If a non-empty path is given, returns a list of all shared links that allow access to the given path - direct links to the given path and links to parent folders of the given path. Links to parent folders can be suppressed by setting direct_only to true.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")?",
					"desc": "See   description. This field is optional."
				},
				{
					"name": "cursor",
					"type": "String?",
					"desc": "The cursor returned by your last call to  . This field is optional."
				},
				{
					"name": "direct_only",
					"type": "Boolean?",
					"desc": "See   description. This field is optional."
				}
			],
			"example": {
				"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
			}
		},
		"returnParameters": {
			"links": [
				{
					".tag": "file",
					"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
					"name": "Prime_Numbers.txt",
					"link_permissions": {
						"can_revoke": false,
						"resolved_visibility": {
							".tag": "public"
						},
						"revoke_failure_reason": {
							".tag": "owner_only"
						}
					},
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"path_lower": "/homework/math/prime_numbers.txt",
					"team_member_info": {
						"team_info": {
							"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
							"name": "Acme, Inc."
						},
						"display_name": "Roger Rabbit",
						"member_id": "dbmid:abcd1234"
					}
				}
			],
			"has_more": true,
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/modify_shared_link_settings": {
		"uri": "https://api.dropboxapi.com/2/sharing/modify_shared_link_settings",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Modify the shared link's settings. If the requested visibility conflict with the shared links policy of the team or the shared folder (in case the linked file is part of a shared folder) then the LinkPermissions.resolved_visibility of the returned SharedLinkMetadata will reflect the actual visibility of the shared link and the LinkPermissions.requested_visibility will reflect the requested visibility.",
		"parameters": {
			"list": [
				{
					"name": "url",
					"type": "String",
					"desc": "URL of the shared link to change its settings"
				},
				{
					"name": "settings",
					"type": "SharedLinkSettings",
					"desc": "Set of settings for the shared link.",
					"parameters": [
						{
							"list": [
								{
									"name": "requested_visibility",
									"type": "RequestedVisibility?",
									"desc": "The requested access for this shared link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Anyone who has received the link can access it. No login required."
												},
												{
													"name": "team_only",
													"type": "Void",
													"desc": "Only members of the same team can access the link. Login is required."
												},
												{
													"name": "password",
													"type": "Void",
													"desc": "A link-specific password is required to access the link. Login is not required."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								},
								{
									"name": "link_password",
									"type": "String?",
									"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
								},
								{
									"name": "expires",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
									"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "requested_visibility",
					"type": "RequestedVisibility?",
					"desc": "The requested access for this shared link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Anyone who has received the link can access it. No login required."
								},
								{
									"name": "team_only",
									"type": "Void",
									"desc": "Only members of the same team can access the link. Login is required."
								},
								{
									"name": "password",
									"type": "Void",
									"desc": "A link-specific password is required to access the link. Login is not required."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Anyone who has received the link can access it. No login required."
				},
				{
					"name": "team_only",
					"type": "Void",
					"desc": "Only members of the same team can access the link. Login is required."
				},
				{
					"name": "password",
					"type": "Void",
					"desc": "A link-specific password is required to access the link. Login is not required."
				},
				{
					"name": "link_password",
					"type": "String?",
					"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
				},
				{
					"name": "expires",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
					"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
				},
				{
					"name": "remove_expiration",
					"type": "Boolean",
					"desc": "If set to true, removes the expiration of the shared link. The default for this field is False."
				}
			],
			"example": {
				"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"settings": {
					"requested_visibility": "public"
				},
				"remove_expiration": false
			}
		},
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				}
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/mount_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/mount_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "The current user mounts the designated folder. Mount a shared folder for a user after they have been added as a member. Once mounted, the shared folder will appear in their Dropbox. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID of the shared folder to mount."
				}
			],
			"example": {
				"shared_folder_id": "84528192421"
			}
		},
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"sharing/relinquish_file_membership": {
		"uri": "https://api.dropboxapi.com/2/sharing/relinquish_file_membership",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "The current user relinquishes their membership in the designated file. Note that the current user may still have inherited access to this file through the parent folder. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "The path or id for the file."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw"
			}
		},
		"returnParameters": null
	},
	"sharing/relinquish_folder_membership": {
		"uri": "https://api.dropboxapi.com/2/sharing/relinquish_folder_membership",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "The current user relinquishes their membership in the designated shared folder and will no longer have access to the folder.  A folder owner cannot relinquish membership in their own folder. This will run synchronously if leave_a_copy is false, and asynchronously if leave_a_copy is true. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Boolean",
					"desc": "Keep a copy of the folder's contents upon relinquishing membership. The default for this field is False."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"leave_a_copy": false
			}
		},
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/remove_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Identical to remove_file_member_2 but with less information returned.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File from which to remove members."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				}
			}
		},
		"returnParameters": {
			".tag": "success"
		}
	},
	"sharing/remove_file_member_2": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_file_member_2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Removes a specified member from the file.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File from which to remove members."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				}
			}
		},
		"returnParameters": {
			".tag": "other"
		}
	},
	"sharing/remove_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor (if the ACL update policy allows) of a shared folder to remove another member. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member to remove from the folder.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				},
				{
					"name": "leave_a_copy",
					"type": "Boolean",
					"desc": "If true, the removed user will keep their copy of the folder after it's unshared, assuming it was mounted. Otherwise, it will be removed from their Dropbox. Also, this must be set to false when kicking a group."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"leave_a_copy": false
			}
		},
		"returnParameters": null
	},
	"sharing/revoke_shared_link": {
		"uri": "https://api.dropboxapi.com/2/sharing/revoke_shared_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Revoke a shared link. Note that even after revoking a shared link to a file, the file may be accessible if there are shared links leading to any of the file parent folders. To list all shared links that enable access to a specific file, you can use the [list_shared_links](#sharinglist_shared_links-see-docs) with the file as the ListSharedLinksArg.path argument.",
		"parameters": {
			"list": [
				{
					"name": "url",
					"type": "String",
					"desc": "URL of the shared link."
				}
			],
			"example": {
				"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0"
			}
		},
		"returnParameters": null
	},
	"sharing/share_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/share_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Share a folder with collaborators. Most sharing will be completed synchronously. Large folders will be completed asynchronously. To make testing the async case repeatable, set `ShareFolderArg.force_async`. If a ShareFolderLaunch.async_job_id is returned, you'll need to call [check_share_job_status](#sharingcheck_share_job_status-see-docs) until the action completes to get the metadata for the folder. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "path",
					"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
					"desc": "The path to the folder to share. If it does not exist, then a new one is created."
				},
				{
					"name": "acl_update_policy",
					"type": "AclUpdatePolicy?",
					"desc": "Who can add and remove members of this shared folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "Only the owner can update the ACL."
								},
								{
									"name": "editors",
									"type": "Void",
									"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "Only the owner can update the ACL."
				},
				{
					"name": "editors",
					"type": "Void",
					"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
				},
				{
					"name": "force_async",
					"type": "Boolean",
					"desc": "Whether to force the share to happen asynchronously. The default for this field is False."
				},
				{
					"name": "member_policy",
					"type": "MemberPolicy?",
					"desc": "Who can be a member of this shared folder. Only applicable if the current user is on a team. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "team",
									"type": "Void",
									"desc": "Only a teammate can become a member."
								},
								{
									"name": "anyone",
									"type": "Void",
									"desc": "Anyone can become a member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Only a teammate can become a member."
				},
				{
					"name": "anyone",
					"type": "Void",
					"desc": "Anyone can become a member."
				},
				{
					"name": "shared_link_policy",
					"type": "SharedLinkPolicy?",
					"desc": "The policy to apply to shared links created for content inside this shared folder.  The current user must be on a team to set this policy to SharedLinkPolicy.members. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "anyone",
									"type": "Void",
									"desc": "Links can be shared with anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Links can be shared with anyone on the same team as the owner."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Links can only be shared among members of the shared folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "anyone",
					"type": "Void",
					"desc": "Links can be shared with anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Links can be shared with anyone on the same team as the owner."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Links can only be shared among members of the shared folder."
				},
				{
					"name": "viewer_info_policy",
					"type": "ViewerInfoPolicy?",
					"desc": "Who can enable/disable viewer info for this shared folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "enabled",
									"type": "Void",
									"desc": "Viewer information is available on this file."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Viewer information is disabled on this file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "enabled",
					"type": "Void",
					"desc": "Viewer information is available on this file."
				},
				{
					"name": "disabled",
					"type": "Void",
					"desc": "Viewer information is disabled on this file."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "This action is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "This action is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				},
				{
					"name": "link_settings",
					"type": "LinkSettings?",
					"desc": "Settings on the link for this folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "access_level",
									"type": "AccessLevel?",
									"desc": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "owner",
													"type": "Void",
													"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
												},
												{
													"name": "editor",
													"type": "Void",
													"desc": "The collaborator can both view and edit the shared folder."
												},
												{
													"name": "viewer",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder."
												},
												{
													"name": "viewer_no_comment",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder and does not have any access to comments."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								},
								{
									"name": "audience",
									"type": "LinkAudience?",
									"desc": "The type of audience on the link for this file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Link is accessible by anyone."
												},
												{
													"name": "team",
													"type": "Void",
													"desc": "Link is accessible only by team members."
												},
												{
													"name": "members",
													"type": "Void",
													"desc": "Link is accessible only by members of the content."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Link is accessible only by members of the content."
								},
								{
									"name": "expiry",
									"type": "LinkExpiry?",
									"desc": "An expiry timestamp to set on a link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "remove_expiry",
													"type": "Void",
													"desc": "Remove the currently set expiry for the link."
												},
												{
													"name": "set_expiry",
													"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
													"desc": "Set a new expiry or change an existing expiry."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								},
								{
									"name": "password",
									"type": "LinkPassword?",
									"desc": "The password for the link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "remove_password",
													"type": "Void",
													"desc": "Remove the currently set password for the link."
												},
												{
													"name": "set_password",
													"type": "String",
													"desc": "Set a new password or change an existing password."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Link is accessible only by members of the content."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "access_level",
					"type": "AccessLevel?",
					"desc": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				},
				{
					"name": "audience",
					"type": "LinkAudience?",
					"desc": "The type of audience on the link for this file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Link is accessible only by members of the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Link is accessible by anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Link is accessible only by team members."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Link is accessible only by members of the content."
				},
				{
					"name": "expiry",
					"type": "LinkExpiry?",
					"desc": "An expiry timestamp to set on a link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "remove_expiry",
					"type": "Void",
					"desc": "Remove the currently set expiry for the link."
				},
				{
					"name": "set_expiry",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
					"desc": "Set a new expiry or change an existing expiry."
				},
				{
					"name": "password",
					"type": "LinkPassword?",
					"desc": "The password for the link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "remove_password",
					"type": "Void",
					"desc": "Remove the currently set password for the link."
				},
				{
					"name": "set_password",
					"type": "String",
					"desc": "Set a new password or change an existing password."
				}
			],
			"example": {
				"path": "/example/workspace",
				"acl_update_policy": "editors",
				"force_async": false,
				"member_policy": "team",
				"shared_link_policy": "members"
			}
		},
		"returnParameters": {
			".tag": "complete",
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"sharing/transfer_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/transfer_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Transfer ownership of a shared folder to a member of the shared folder. User must have AccessLevel.owner access to the shared folder to perform a transfer. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "to_dropbox_id",
					"type": "String(min_length=1)",
					"desc": "A account or team member ID to transfer ownership to."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"to_dropbox_id": "dbid:AAEufNrMPSPe0dMQijRP0N_aZtBJRm26W4Q"
			}
		},
		"returnParameters": null
	},
	"sharing/unmount_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/unmount_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "The current user unmounts the designated folder. They can re-mount the folder at a later time using [mount_folder](#sharingmount_folder-see-docs). Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				}
			],
			"example": {
				"shared_folder_id": "84528192421"
			}
		},
		"returnParameters": null
	},
	"sharing/unshare_file": {
		"uri": "https://api.dropboxapi.com/2/sharing/unshare_file",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Remove all members from this file. Does not remove inherited members.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "The file to unshare."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw"
			}
		},
		"returnParameters": null
	},
	"sharing/unshare_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/unshare_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows a shared folder owner to unshare the folder. You'll need to call [check_job_status](#sharingcheck_job_status-see-docs) to determine if the action has completed successfully. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Boolean",
					"desc": "If true, members of this shared folder will get a copy of this folder after it's unshared. Otherwise, it will be removed from their Dropbox. The current user, who is an owner, will always retain their copy. The default for this field is False."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"leave_a_copy": false
			}
		},
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/update_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Changes a member's access on a shared file.",
		"parameters": {
			"list": [
				{
					"name": "file",
					"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
					"desc": "File for which we are changing a member's access."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member whose access we are changing.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "The new access level for the member.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				}
			],
			"example": {
				"file": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"access_level": "viewer"
			}
		},
		"returnParameters": null
	},
	"sharing/update_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Allows an owner or editor of a shared folder to update another member's permissions. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "member",
					"type": "MemberSelector",
					"desc": "The member of the shared folder to update.  Only the MemberSelector.dropbox_id may be set at this time.",
					"parameters": [
						{
							"list": [
								{
									"name": "dropbox_id",
									"type": "String(min_length=1)",
									"desc": "Dropbox account, team member, or group ID of member."
								},
								{
									"name": "email",
									"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
									"desc": "E-mail address of member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "dropbox_id",
					"type": "String(min_length=1)",
					"desc": "Dropbox account, team member, or group ID of member."
				},
				{
					"name": "email",
					"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
					"desc": "E-mail address of member."
				},
				{
					"name": "access_level",
					"type": "AccessLevel",
					"desc": "The new access level for member. AccessLevel.owner is disallowed.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"member": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"access_level": "editor"
			}
		},
		"returnParameters": null
	},
	"sharing/update_folder_policy": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_folder_policy",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Update the sharing policies for a shared folder. User must have AccessLevel.owner access to the shared folder to update its policies. Apps must have full Dropbox access to use this endpoint.",
		"parameters": {
			"list": [
				{
					"name": "shared_folder_id",
					"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
					"desc": "The ID for the shared folder."
				},
				{
					"name": "member_policy",
					"type": "MemberPolicy?",
					"desc": "Who can be a member of this shared folder. Only applicable if the current user is on a team. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "team",
									"type": "Void",
									"desc": "Only a teammate can become a member."
								},
								{
									"name": "anyone",
									"type": "Void",
									"desc": "Anyone can become a member."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Only a teammate can become a member."
				},
				{
					"name": "anyone",
					"type": "Void",
					"desc": "Anyone can become a member."
				},
				{
					"name": "acl_update_policy",
					"type": "AclUpdatePolicy?",
					"desc": "Who can add and remove members of this shared folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "Only the owner can update the ACL."
								},
								{
									"name": "editors",
									"type": "Void",
									"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "Only the owner can update the ACL."
				},
				{
					"name": "editors",
					"type": "Void",
					"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
				},
				{
					"name": "viewer_info_policy",
					"type": "ViewerInfoPolicy?",
					"desc": "Who can enable/disable viewer info for this shared folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "enabled",
									"type": "Void",
									"desc": "Viewer information is available on this file."
								},
								{
									"name": "disabled",
									"type": "Void",
									"desc": "Viewer information is disabled on this file."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "enabled",
					"type": "Void",
					"desc": "Viewer information is available on this file."
				},
				{
					"name": "disabled",
					"type": "Void",
					"desc": "Viewer information is disabled on this file."
				},
				{
					"name": "shared_link_policy",
					"type": "SharedLinkPolicy?",
					"desc": "The policy to apply to shared links created for content inside this shared folder. The current user must be on a team to set this policy to SharedLinkPolicy.members. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "anyone",
									"type": "Void",
									"desc": "Links can be shared with anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Links can be shared with anyone on the same team as the owner."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Links can only be shared among members of the shared folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "anyone",
					"type": "Void",
					"desc": "Links can be shared with anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Links can be shared with anyone on the same team as the owner."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Links can only be shared among members of the shared folder."
				},
				{
					"name": "link_settings",
					"type": "LinkSettings?",
					"desc": "Settings on the link for this folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "access_level",
									"type": "AccessLevel?",
									"desc": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "owner",
													"type": "Void",
													"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
												},
												{
													"name": "editor",
													"type": "Void",
													"desc": "The collaborator can both view and edit the shared folder."
												},
												{
													"name": "viewer",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder."
												},
												{
													"name": "viewer_no_comment",
													"type": "Void",
													"desc": "The collaborator can only view the shared folder and does not have any access to comments."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								},
								{
									"name": "audience",
									"type": "LinkAudience?",
									"desc": "The type of audience on the link for this file. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "public",
													"type": "Void",
													"desc": "Link is accessible by anyone."
												},
												{
													"name": "team",
													"type": "Void",
													"desc": "Link is accessible only by team members."
												},
												{
													"name": "members",
													"type": "Void",
													"desc": "Link is accessible only by members of the content."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Link is accessible only by members of the content."
								},
								{
									"name": "expiry",
									"type": "LinkExpiry?",
									"desc": "An expiry timestamp to set on a link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "remove_expiry",
													"type": "Void",
													"desc": "Remove the currently set expiry for the link."
												},
												{
													"name": "set_expiry",
													"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
													"desc": "Set a new expiry or change an existing expiry."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								},
								{
									"name": "password",
									"type": "LinkPassword?",
									"desc": "The password for the link. This field is optional.",
									"parameters": [
										{
											"list": [
												{
													"name": "remove_password",
													"type": "Void",
													"desc": "Remove the currently set password for the link."
												},
												{
													"name": "set_password",
													"type": "String",
													"desc": "Set a new password or change an existing password."
												}
											],
											"example": null
										}
									]
								},
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Link is accessible only by members of the content."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								}
							],
							"example": null
						},
						{
							"list": [
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "access_level",
					"type": "AccessLevel?",
					"desc": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "owner",
									"type": "Void",
									"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
								},
								{
									"name": "editor",
									"type": "Void",
									"desc": "The collaborator can both view and edit the shared folder."
								},
								{
									"name": "viewer",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder."
								},
								{
									"name": "viewer_no_comment",
									"type": "Void",
									"desc": "The collaborator can only view the shared folder and does not have any access to comments."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "owner",
					"type": "Void",
					"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
				},
				{
					"name": "editor",
					"type": "Void",
					"desc": "The collaborator can both view and edit the shared folder."
				},
				{
					"name": "viewer",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder."
				},
				{
					"name": "viewer_no_comment",
					"type": "Void",
					"desc": "The collaborator can only view the shared folder and does not have any access to comments."
				},
				{
					"name": "audience",
					"type": "LinkAudience?",
					"desc": "The type of audience on the link for this file. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "public",
									"type": "Void",
									"desc": "Link is accessible by anyone."
								},
								{
									"name": "team",
									"type": "Void",
									"desc": "Link is accessible only by team members."
								},
								{
									"name": "members",
									"type": "Void",
									"desc": "Link is accessible only by members of the content."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "public",
					"type": "Void",
					"desc": "Link is accessible by anyone."
				},
				{
					"name": "team",
					"type": "Void",
					"desc": "Link is accessible only by team members."
				},
				{
					"name": "members",
					"type": "Void",
					"desc": "Link is accessible only by members of the content."
				},
				{
					"name": "expiry",
					"type": "LinkExpiry?",
					"desc": "An expiry timestamp to set on a link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "remove_expiry",
									"type": "Void",
									"desc": "Remove the currently set expiry for the link."
								},
								{
									"name": "set_expiry",
									"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
									"desc": "Set a new expiry or change an existing expiry."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "remove_expiry",
					"type": "Void",
					"desc": "Remove the currently set expiry for the link."
				},
				{
					"name": "set_expiry",
					"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
					"desc": "Set a new expiry or change an existing expiry."
				},
				{
					"name": "password",
					"type": "LinkPassword?",
					"desc": "The password for the link. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "remove_password",
									"type": "Void",
									"desc": "Remove the currently set password for the link."
								},
								{
									"name": "set_password",
									"type": "String",
									"desc": "Set a new password or change an existing password."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "remove_password",
					"type": "Void",
					"desc": "Remove the currently set password for the link."
				},
				{
					"name": "set_password",
					"type": "String",
					"desc": "Set a new password or change an existing password."
				},
				{
					"name": "actions",
					"type": "List of (FolderAction)?",
					"desc": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's SharedFolderMetadata.permissions field describing the actions the  authenticated user can perform on the folder. This field is optional.",
					"parameters": [
						{
							"list": [
								{
									"name": "change_options",
									"type": "Void",
									"desc": "Change folder options, such as who can be invited to join the folder."
								},
								{
									"name": "disable_viewer_info",
									"type": "Void",
									"desc": "Disable viewer information for this folder."
								},
								{
									"name": "edit_contents",
									"type": "Void",
									"desc": "Change or edit contents of the folder."
								},
								{
									"name": "enable_viewer_info",
									"type": "Void",
									"desc": "Enable viewer information on the folder."
								},
								{
									"name": "invite_editor",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read and write permission."
								},
								{
									"name": "invite_viewer",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission."
								},
								{
									"name": "invite_viewer_no_comment",
									"type": "Void",
									"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
								},
								{
									"name": "relinquish_membership",
									"type": "Void",
									"desc": "Relinquish one's own membership in the folder."
								},
								{
									"name": "unmount",
									"type": "Void",
									"desc": "Unmount the folder."
								},
								{
									"name": "unshare",
									"type": "Void",
									"desc": "Stop sharing this folder."
								},
								{
									"name": "leave_a_copy",
									"type": "Void",
									"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
								},
								{
									"name": "share_link",
									"type": "Void",
									"desc": "This action is deprecated. Use create_link instead."
								},
								{
									"name": "create_link",
									"type": "Void",
									"desc": "Create a shared link for folder."
								}
							],
							"example": null
						}
					]
				},
				{
					"name": "change_options",
					"type": "Void",
					"desc": "Change folder options, such as who can be invited to join the folder."
				},
				{
					"name": "disable_viewer_info",
					"type": "Void",
					"desc": "Disable viewer information for this folder."
				},
				{
					"name": "edit_contents",
					"type": "Void",
					"desc": "Change or edit contents of the folder."
				},
				{
					"name": "enable_viewer_info",
					"type": "Void",
					"desc": "Enable viewer information on the folder."
				},
				{
					"name": "invite_editor",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read and write permission."
				},
				{
					"name": "invite_viewer",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission."
				},
				{
					"name": "invite_viewer_no_comment",
					"type": "Void",
					"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
				},
				{
					"name": "relinquish_membership",
					"type": "Void",
					"desc": "Relinquish one's own membership in the folder."
				},
				{
					"name": "unmount",
					"type": "Void",
					"desc": "Unmount the folder."
				},
				{
					"name": "unshare",
					"type": "Void",
					"desc": "Stop sharing this folder."
				},
				{
					"name": "leave_a_copy",
					"type": "Void",
					"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
				},
				{
					"name": "share_link",
					"type": "Void",
					"desc": "This action is deprecated. Use create_link instead."
				},
				{
					"name": "create_link",
					"type": "Void",
					"desc": "Create a shared link for folder."
				}
			],
			"example": {
				"shared_folder_id": "84528192421",
				"member_policy": "team",
				"acl_update_policy": "owner",
				"shared_link_policy": "members"
			}
		},
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"users/get_account": {
		"uri": "https://api.dropboxapi.com/2/users/get_account",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get information about a user's account.",
		"parameters": {
			"list": [
				{
					"name": "account_id",
					"type": "String(min_length=40, max_length=40)",
					"desc": "A user's account identifier."
				}
			],
			"example": {
				"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			}
		},
		"returnParameters": {
			"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
			"name": {
				"given_name": "Franz",
				"surname": "Ferdinand",
				"familiar_name": "Franz",
				"display_name": "Franz Ferdinand (Personal)",
				"abbreviated_name": "FF"
			},
			"email": "franz@dropbox.com",
			"email_verified": true,
			"disabled": false,
			"is_teammate": false,
			"profile_photo_url": "https://dl-web.dropbox.com/account_photo/get/dbid%3AAAH4f99T0taONIb-OurWxbNQ6ywGRopQngc?vers=1453416696524&size=128x128"
		}
	},
	"users/get_account_batch": {
		"uri": "https://api.dropboxapi.com/2/users/get_account_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get information about multiple user accounts.  At most 300 accounts may be queried per request.",
		"parameters": {
			"list": [
				{
					"name": "account_ids",
					"type": "List of (String(min_length=40, max_length=40), min_items=1)",
					"desc": "List of user account identifiers.  Should not contain any duplicate account IDs."
				}
			],
			"example": {
				"account_ids": [
					"dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"dbid:AAH1Vcz-DVoRDeixtr_OA8oUGgiqhs4XPOQ"
				]
			}
		},
		"returnParameters": null
	},
	"users/get_current_account": {
		"uri": "https://api.dropboxapi.com/2/users/get_current_account",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get information about the current user's account.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
			"name": {
				"given_name": "Franz",
				"surname": "Ferdinand",
				"familiar_name": "Franz",
				"display_name": "Franz Ferdinand (Personal)",
				"abbreviated_name": "FF"
			},
			"email": "franz@dropbox.com",
			"email_verified": true,
			"disabled": false,
			"locale": "en",
			"referral_link": "https://db.tt/ZITNuhtI",
			"is_paired": true,
			"account_type": {
				".tag": "business"
			},
			"country": "US",
			"team": {
				"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
				"name": "Acme, Inc.",
				"sharing_policies": {
					"shared_folder_member_policy": {
						".tag": "team"
					},
					"shared_folder_join_policy": {
						".tag": "from_anyone"
					},
					"shared_link_create_policy": {
						".tag": "team_only"
					}
				},
				"office_addin_policy": {
					".tag": "disabled"
				}
			},
			"team_member_id": "dbmid:AAHhy7WsR0x-u4ZCqiDl5Fz5zvuL3kmspwU"
		}
	},
	"users/get_space_usage": {
		"uri": "https://api.dropboxapi.com/2/users/get_space_usage",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"category": "RPC",
		"description": "Get the space usage information for the current user's account.",
		"parameters": {
			"list": [],
			"example": null
		},
		"returnParameters": {
			"used": 314159265,
			"allocation": {
				".tag": "individual",
				"allocated": 10000000000
			}
		}
	}
}